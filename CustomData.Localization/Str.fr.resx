<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" id="root">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace"/>
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0"/>
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string"/>
              <xsd:attribute name="type" type="xsd:string"/>
              <xsd:attribute name="mimetype" type="xsd:string"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string"/>
              <xsd:attribute name="name" type="xsd:string"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1"/>
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3"/>
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required"/>
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="cd_cimNamingTab_title" xml:space="preserve">
    <value>Cims' naming</value>
  </data>
  <data name="cd_districtTab_cityColor" xml:space="preserve">
    <value>Couleur de la ville</value>
  </data>
  <data name="cd_districtTab_districtColor" xml:space="preserve">
    <value>Couleur du district</value>
  </data>
  <data name="cd_districtTab_districtToChange" xml:space="preserve">
    <value>Sélectionner un district</value>
  </data>
  <data name="cd_districtTab_postalCodeDigits" xml:space="preserve">
    <value>Chiffres du code postal (de 000 à 999)</value>
  </data>
  <data name="cd_districtTab_postalCodeDigitsFallback" xml:space="preserve">
    <value>Code postal de la ville</value>
  </data>
  <data name="cd_districtTab_roadFormattingFile" xml:space="preserve">
    <value>Road name pattern file</value>
  </data>
  <data name="cd_districtTab_roadFormattingFileDefault" xml:space="preserve">
    <value>City default road pattern file</value>
  </data>
  <data name="cd_districtTab_roadNamingsFile" xml:space="preserve">
    <value>Road naming file</value>
  </data>
  <data name="cd_districtTab_roadNamingsFileDefault" xml:space="preserve">
    <value>City default road naming file</value>
  </data>
  <data name="cd_districtTab_title" xml:space="preserve">
    <value>Données du district</value>
  </data>
  <data name="cd_neighborTab_actions" xml:space="preserve">
    <value>Actions</value>
  </data>
  <data name="cd_neighborTab_azimuthDirectionShort" xml:space="preserve">
    <value>Azimut (en degrés (°))</value>
  </data>
  <data name="cd_neighborTab_cityName" xml:space="preserve">
    <value>Nom de la ville</value>
  </data>
  <data name="cd_neighborTab_neighborNamesFile" xml:space="preserve">
    <value>Default city names file</value>
  </data>
  <data name="cd_neighborTab_title" xml:space="preserve">
    <value>Neighbors</value>
  </data>
  <data name="root_modDescription" xml:space="preserve">
    <value>Data storage to extra stuff for game Intances</value>
  </data>
  <data name="cd_cimNamingTab_surnamesTitle" xml:space="preserve">
    <value>Fichier des noms de famille</value>
  </data>
  <data name="cd_cimNamingTab_femaleNamesTitle" xml:space="preserve">
    <value>Fichier des noms donnés pour les femmes</value>
  </data>
  <data name="cd_cimNamingTab_maleNamesTitle" xml:space="preserve">
    <value>Fichier des noms donnés pour les hommes</value>
  </data>
  <data name="cd_cimNamingTab_surnameBeforeMainname" xml:space="preserve">
    <value>Surnames before given names
(only when using custom surnames)</value>
  </data>
  <data name="cd_areasNamingTab_simplePatternNote" xml:space="preserve">
    <value>&lt;i&gt;&lt;color=#FFFF00&gt;NOTE:&lt;/color&gt; Simple pattern files are like the name files, but requires to have a placeholder "&lt;color=#00ff00&gt;{0}&lt;/color&gt;" to be replaced by the generated name.&lt;/i&gt;</value>
  </data>
  <data name="cd_areasNamingTab_title" xml:space="preserve">
    <value>Nommage des zones</value>
  </data>
  <data name="cd_areasNamingTab_simplePatternFile" xml:space="preserve">
    <value>Simple patterns file</value>
  </data>
  <data name="cd_areasNamingTab_namesFile" xml:space="preserve">
    <value>Fichier de noms</value>
  </data>
  <data name="cd_Enum__DistrictAreaType_Parks_CityPark" xml:space="preserve">
    <value>&lt;color=#00FF00&gt;City Park Areas&lt;/color&gt;</value>
  </data>
  <data name="cd_Enum__DistrictAreaType_Airports" xml:space="preserve">
    <value>&lt;color=#00FFFF&gt;Airport Areas&lt;/color&gt;</value>
  </data>
  <data name="cd_Enum__DistrictAreaType_Campus_Liberal" xml:space="preserve">
    <value>&lt;color=#0044FF&gt;Liberal Arts College&lt;/color&gt;</value>
  </data>
  <data name="cd_Enum__DistrictAreaType_Campus_Regular" xml:space="preserve">
    <value>&lt;color=#0044FF&gt;University&lt;/color&gt;</value>
  </data>
  <data name="cd_Enum__DistrictAreaType_Campus_Trade" xml:space="preserve">
    <value>&lt;color=#0044FF&gt;Trade School&lt;/color&gt;</value>
  </data>
  <data name="cd_Enum__DistrictAreaType_Industry_Farming" xml:space="preserve">
    <value>&lt;color=#FFFF00&gt;Farming Industry Areas&lt;/color&gt;</value>
  </data>
  <data name="cd_Enum__DistrictAreaType_Industry_Forest" xml:space="preserve">
    <value>&lt;color=#FFFF00&gt;Forest Industry Areas&lt;/color&gt;</value>
  </data>
  <data name="cd_Enum__DistrictAreaType_Industry_Mining" xml:space="preserve">
    <value>&lt;color=#FFFF00&gt;Mining Inudstry Areas&lt;/color&gt;</value>
  </data>
  <data name="cd_Enum__DistrictAreaType_Industry_Oil" xml:space="preserve">
    <value>&lt;color=#FFFF00&gt;Oil Industry Areas&lt;/color&gt;</value>
  </data>
  <data name="cd_Enum__DistrictAreaType_Parks_Amusement" xml:space="preserve">
    <value>&lt;color=#00FF00&gt;Amusement Parks&lt;/color&gt;</value>
  </data>
  <data name="cd_Enum__DistrictAreaType_Parks_Natural" xml:space="preserve">
    <value>&lt;color=#00FF00&gt;Natural Reserves&lt;/color&gt;</value>
  </data>
  <data name="cd_Enum__DistrictAreaType_Parks_Zoo" xml:space="preserve">
    <value>&lt;color=#00FF00&gt;Zoo Areas&lt;/color&gt;</value>
  </data>
  <data name="cd_Enum__DistrictAreaType_Pedestrian" xml:space="preserve">
    <value>&lt;color=#888888&gt;Pedestrian Areas&lt;/color&gt;</value>
  </data>
  <data name="cd_Enum__DistrictAreaType_Regular" xml:space="preserve">
    <value>Regular districts</value>
  </data>
  <data name="cd_addressingSettingsTab_title" xml:space="preserve">
    <value>Paramètres d'adresse</value>
  </data>
  <data name="cd_addressingSettingsTab_addressesLines" xml:space="preserve">
    <value>Lignes d’adresse</value>
  </data>
  <data name="cd_addressingSettingsTab_addressLine1" xml:space="preserve">
    <value>Ligne d'adresse 1</value>
  </data>
  <data name="cd_addressingSettingsTab_addressLine2" xml:space="preserve">
    <value>Ligne d'adresse 2</value>
  </data>
  <data name="cd_addressingSettingsTab_addressLine3" xml:space="preserve">
    <value>Ligne d'adresse 3</value>
  </data>
  <data name="cd_addressingSettingsTab_citywidePostalCode" xml:space="preserve">
    <value>Chiffres de code postal de la ville</value>
  </data>
  <data name="cd_addressingSettingsTab_postalCodeFormat" xml:space="preserve">
    <value>Format du code postal</value>
  </data>
  <data name="cd_addressingSettingsTab_postalCodeSettings" xml:space="preserve">
    <value>Paramètres du code postal</value>
  </data>
  <data name="cd_addressingSettingsTab_postalCodeDescription_A" xml:space="preserve">
    <value>1st digit of name seed id of the segment (0-6)</value>
  </data>
  <data name="cd_addressingSettingsTab_postalCodeDescription_B" xml:space="preserve">
    <value>2nd digit of name seed id of the segment (0-9)</value>
  </data>
  <data name="cd_addressingSettingsTab_postalCodeDescription_C" xml:space="preserve">
    <value>3rd digit of name seed id of the segment (0-9)</value>
  </data>
  <data name="cd_addressingSettingsTab_postalCodeDescription_D" xml:space="preserve">
    <value>4th digit of name seed id of the segment (0-9)</value>
  </data>
  <data name="cd_addressingSettingsTab_postalCodeDescription_E" xml:space="preserve">
    <value>5th digit of name seed id of the segment (0-9)</value>
  </data>
  <data name="cd_addressingSettingsTab_postalCodeDescription_F" xml:space="preserve">
    <value>1st digit of segment id of the segment (0-3)</value>
  </data>
  <data name="cd_addressingSettingsTab_postalCodeDescription_G" xml:space="preserve">
    <value>2nd digit of segment id of the segment (0-9)</value>
  </data>
  <data name="cd_addressingSettingsTab_postalCodeDescription_H" xml:space="preserve">
    <value>3rd digit of segment id of the segment (0-9)</value>
  </data>
  <data name="cd_addressingSettingsTab_postalCodeDescription_I" xml:space="preserve">
    <value>4th digit of segment id of the segment (0-9)</value>
  </data>
  <data name="cd_addressingSettingsTab_postalCodeDescription_J" xml:space="preserve">
    <value>5th digit of segment id of the segment (0-9)</value>
  </data>
  <data name="cd_addressingSettingsTab_postalCodeDescription_K" xml:space="preserve">
    <value>Hundreds digit from citywide postal code</value>
  </data>
  <data name="cd_addressingSettingsTab_postalCodeDescription_L" xml:space="preserve">
    <value>Tens digit from citywide postal code</value>
  </data>
  <data name="cd_addressingSettingsTab_postalCodeDescription_M" xml:space="preserve">
    <value>Units digit from citywide postal code</value>
  </data>
  <data name="cd_addressingSettingsTab_postalCodeDescription_N" xml:space="preserve">
    <value>Hundreds digit from district postal code</value>
  </data>
  <data name="cd_addressingSettingsTab_postalCodeDescription_O" xml:space="preserve">
    <value>Tens digit from district postal code</value>
  </data>
  <data name="cd_addressingSettingsTab_postalCodeDescription_P" xml:space="preserve">
    <value>Units digit from district postal code</value>
  </data>
  <data name="cd_addressingSettingsTab_postalCodeDescription_X" xml:space="preserve">
    <value>Map tile coordinate in East-West axis (0-8)</value>
  </data>
  <data name="cd_addressingSettingsTab_postalCodeDescription_x_" xml:space="preserve">
    <value>Tenths of tile coordinate in East-West axis (0-9)</value>
  </data>
  <data name="cd_addressingSettingsTab_postalCodeDescription_Y" xml:space="preserve">
    <value>Map tile coordinate in North-South axis (0-8)</value>
  </data>
  <data name="cd_addressingSettingsTab_postalCodeDescription_y_" xml:space="preserve">
    <value>Tenths of tile coordinate in North-South axis (0-9)</value>
  </data>
  <data name="cd_addressingSettingsTab_postalCodeHelpHeaderText" xml:space="preserve">
    <value>There are all letters that have a special value in the postal code formatting.
Use backslash &lt;color=#FFFF00&gt;\&lt;/color&gt; to escape a character and show it literally, or put the literal content &lt;color=#FFFF00&gt;"between double quotes"&lt;/color&gt;.
Unlisted characters will always be shown literally.</value>
  </data>
  <data name="cd_addressingSettingsTab_addressLineDescription_A" xml:space="preserve">
    <value>Street name</value>
  </data>
  <data name="cd_addressingSettingsTab_addressLineDescription_B" xml:space="preserve">
    <value>Number (distance from start of street)</value>
  </data>
  <data name="cd_addressingSettingsTab_addressLineDescription_C" xml:space="preserve">
    <value>City Name</value>
  </data>
  <data name="cd_addressingSettingsTab_addressLineDescription_D" xml:space="preserve">
    <value>District</value>
  </data>
  <data name="cd_addressingSettingsTab_addressLineDescription_E" xml:space="preserve">
    <value>Code Postal</value>
  </data>
  <data name="cd_addressingSettingsTab_addressLineDescription_F" xml:space="preserve">
    <value>Nom de la zone (parc, industrie, etc)</value>
  </data>
  <data name="cd_addressingSettingsTab_addressLineHelpHeaderText" xml:space="preserve">
    <value>Il y a toutes les lettres qui représentent une signification spéciale dans les lignes d'adresses.
Utilisez l'antislash &lt;color=#FFFF00&gt;\&lt;/color&gt; pour échapper un caractère et l'afficher littéralement.
Le texte écrit entre crochets &lt;color=#FFFF00&gt;[ ]&lt;/color&gt; ne sera pas affiché s'il n'y a pas de district.
Le texte écrit entre parenthèses &lt;color=#FFFF00&gt;( )&lt;/color&gt; ne sera pas affiché s'il n'y a pas de zone spéciale.</value>
  </data>
  <data name="cd_autoNamingBuildingTab_title" xml:space="preserve">
    <value>Building auto naming</value>
  </data>
  <data name="cd_autoNamingBuildingTab_cargoStationsNamingHeader" xml:space="preserve">
    <value>Stations de fret</value>
  </data>
  <data name="cd_autoNamingBuildingTab_passengerStationsNamingHeader" xml:space="preserve">
    <value>Gare de voyageurs</value>
  </data>
  <data name="cd_autoNamingBuildingTab_ricoNamingHeader" xml:space="preserve">
    <value>Utiliser la première ligne d'adresse comme nom</value>
  </data>
  <data name="cd_Enum__UseGeneratedNameCategories_CommercialZone" xml:space="preserve">
    <value>Zone Commerciale</value>
  </data>
  <data name="cd_Enum__UseGeneratedNameCategories_AirplaneCargo" xml:space="preserve">
    <value>Cargo Airports</value>
  </data>
  <data name="cd_Enum__UseGeneratedNameCategories_AirplanePassenger" xml:space="preserve">
    <value>Passenger Airports</value>
  </data>
  <data name="cd_Enum__UseGeneratedNameCategories_Blimps" xml:space="preserve">
    <value>Arrêts de dirigeable</value>
  </data>
  <data name="cd_Enum__UseGeneratedNameCategories_Bus" xml:space="preserve">
    <value>Arrêts de bus</value>
  </data>
  <data name="cd_Enum__UseGeneratedNameCategories_CableCar" xml:space="preserve">
    <value>Bâtiments de funiculaire</value>
  </data>
  <data name="cd_Enum__UseGeneratedNameCategories_Ferry" xml:space="preserve">
    <value>Ports de ferrys</value>
  </data>
  <data name="cd_Enum__UseGeneratedNameCategories_Helicopters" xml:space="preserve">
    <value>Arrêts d'hélicoptère</value>
  </data>
  <data name="cd_Enum__UseGeneratedNameCategories_IndustrialZone" xml:space="preserve">
    <value>Zone Industrielle</value>
  </data>
  <data name="cd_Enum__UseGeneratedNameCategories_IntercityBus" xml:space="preserve">
    <value>Arrêt de bus interurbain</value>
  </data>
  <data name="cd_Enum__UseGeneratedNameCategories_Metro" xml:space="preserve">
    <value>Stations de métro</value>
  </data>
  <data name="cd_Enum__UseGeneratedNameCategories_Monorail" xml:space="preserve">
    <value>Arrêt de monorail</value>
  </data>
  <data name="cd_Enum__UseGeneratedNameCategories_OfficeZone" xml:space="preserve">
    <value>Zone de bureaux</value>
  </data>
  <data name="cd_Enum__UseGeneratedNameCategories_ResidentialZone" xml:space="preserve">
    <value>Zone résidentielle</value>
  </data>
  <data name="cd_Enum__UseGeneratedNameCategories_ShipCargo" xml:space="preserve">
    <value>Cargo Harbors</value>
  </data>
  <data name="cd_Enum__UseGeneratedNameCategories_ShipPassenger" xml:space="preserve">
    <value>Passenger Harbors</value>
  </data>
  <data name="cd_Enum__UseGeneratedNameCategories_TrainCargo" xml:space="preserve">
    <value>Cargo Train Stations</value>
  </data>
  <data name="cd_Enum__UseGeneratedNameCategories_TrainPassenger" xml:space="preserve">
    <value>Passenger Train Stations</value>
  </data>
  <data name="cd_Enum__UseGeneratedNameCategories_Tram" xml:space="preserve">
    <value>Arrêt de tramway</value>
  </data>
  <data name="cd_Enum__UseGeneratedNameCategories_Trolleybus" xml:space="preserve">
    <value>Arrêt de trolley-bus</value>
  </data>
  <data name="cd_Enum__UseGeneratedNameCategories_Taxi" xml:space="preserve">
    <value>Station de taxi</value>
  </data>
  <data name="cd_stadiumsTab_selectStadiumLabel" xml:space="preserve">
    <value>Select Arena/Stadium</value>
  </data>
  <data name="cd_stadiumsTab_title" xml:space="preserve">
    <value>Arenas &amp; Stadiums</value>
  </data>
  <data name="cd_addressWindow_noAddressAvailable" xml:space="preserve">
    <value>Aucune adresse disponible pour ce bâtiment</value>
  </data>
  <data name="cd_addressWindow_pickALogoFor" xml:space="preserve">
    <value>Pick image logo (256x256) for: {0}</value>
  </data>
  <data name="cd_addressWindow_addLogoImage" xml:space="preserve">
    <value>Ajouter l'image du logo (256x256)</value>
  </data>
  <data name="cd_addressWindow_invalidTexture" xml:space="preserve">
    <value>Texture invalide !</value>
  </data>
  <data name="cd_addressWindow_invalidTextureContent" xml:space="preserve">
    <value>La texture doit avoir exactement des dimensions de 256x256 pixels !</value>
  </data>
  <data name="cd_addressWindow_removeLogo" xml:space="preserve">
    <value>Supprimer le logo</value>
  </data>
  <data name="cd_Enum__CDVars_CurrentBuilding" xml:space="preserve">
    <value>Attributs supplémentaires du Custom Data Mod relatifs au bâtiment actuel.</value>
  </data>
  <data name="cd_Enum__VariableBuildingSubType_ImageLogo" xml:space="preserve">
    <value>Image du logo mis en place dans Custom Data Mod pour le bâtiment.</value>
  </data>
  <data name="cd_Enum__CDVars_SourceBuilding" xml:space="preserve">
    <value>Attributs supplémentaires du Custom Data Mod relatifs au bâtiment source du véhicule actuel.</value>
  </data>
  <data name="cd_addressWindow_overrideLineColor" xml:space="preserve">
    <value>Forcer la couleur de la ligne</value>
  </data>
  <data name="cd_addressWindow_ownVehicleColors" xml:space="preserve">
    <value>Couleur des véhicules créés</value>
  </data>
  <data name="cd_addressWindow_preferredSkin" xml:space="preserve">
    <value>Preferred vehicles skin name (VS only)</value>
  </data>
  <data name="cd_addressWindow_vehicleIdentifierPattern" xml:space="preserve">
    <value>Vehicle identifier pattern</value>
  </data>
  <data name="cd_addressWindow_vehicleIdentifierPattern_helpContent" xml:space="preserve">
    <value>&lt;color=yellow&gt;ABCDE abcde&lt;/color&gt;
Represents the ordinal value (starting in 0) counting vehicles spawned for its parent depot. Letter case has same behavior than &lt;color=yellow&gt;jkl&lt;/color&gt; group.
&lt;color=green&gt;Example:&lt;/color&gt; If the bus is the 36th bus to left the garage, &lt;color=yellow&gt;A, B&lt;/color&gt; and &lt;color=yellow&gt;C&lt;/color&gt; will be "0", &lt;color=yellow&gt;a, b&lt;/color&gt; and &lt;color=yellow&gt;c&lt;/color&gt; will be ignored (no hundreds!), &lt;color=yellow&gt;D&lt;/color&gt; and &lt;color=yellow&gt;d&lt;/color&gt; became 3 and &lt;color=yellow&gt;E&lt;/color&gt; and &lt;color=yellow&gt;e&lt;/color&gt; became "5" (first = 0, remember!). Since it's a lifespan account it never reset the counting.

&lt;color=yellow&gt;JKL jkl&lt;/color&gt;
Represents the value of Nth vehicle in the current vehicle composition, starting at 0 (may be configured to start in 1 in the future). Useful for identify wagons of a train, as example.
The upper case will print leading zeroes if the number doesn't reach that order of magnitude, the lower case will ignore the digits and print nothing.
&lt;color=green&gt;Example:&lt;/color&gt; The 4th car of a passenger train will return nothing for &lt;color=yellow&gt;j&lt;/color&gt; nor &lt;color=yellow&gt;k&lt;/color&gt;, "0" for &lt;color=yellow&gt;J&lt;/color&gt; and &lt;color=yellow&gt;K&lt;/color&gt; and "3" for &lt;color=yellow&gt;L&lt;/color&gt; or &lt;color=yellow&gt;l&lt;/color&gt;.
&lt;color=cyan&gt;NOTE: &lt;color=yellow&gt;L&lt;/color&gt; and &lt;color=yellow&gt;l&lt;/color&gt; always will have the same value since the last zero always counts as significant digit. Same for multicase options below.&lt;/color&gt;
	
&lt;color=yellow&gt;VWXYZ vwxyz&lt;/color&gt;
Represents the internal vehicle ID in game. Varies from 1 to 16383 (or 65535 for More Vehicles users) and are full random. Letter case has the same behavior than &lt;color=yellow&gt;jkl&lt;/color&gt; and &lt;color=yellow&gt;stu&lt;/color&gt; groups.
&lt;color=green&gt;Example:&lt;/color&gt; The internal id of the vehicle is 7562. So &lt;color=yellow&gt;V&lt;/color&gt; became "0", &lt;color=yellow&gt;v&lt;/color&gt; is ignored, &lt;color=yellow&gt;W&lt;/color&gt; and &lt;color=yellow&gt;w&lt;/color&gt; are "7", &lt;color=yellow&gt;X&lt;/color&gt; and &lt;color=yellow&gt;x&lt;/color&gt; are "5", &lt;color=yellow&gt;Y&lt;/color&gt; and &lt;color=yellow&gt;y&lt;/color&gt; are "6" and &lt;color=yellow&gt;Z&lt;/color&gt; and &lt;color=yellow&gt;z&lt;/color&gt; are "2";
	
&lt;color=yellow&gt;\&lt;/color&gt;
Use the backslash to escape the letter and use it literally (not apply the value). Double it to show a backslash in the output
&lt;color=green&gt;Example:&lt;/color&gt; Even the internal ID of vehicle being 7562, if &lt;color=yellow&gt;\v&lt;/color&gt; is typed, &lt;color=yellow&gt;v&lt;/color&gt; will print "v" at output instead of being ignored.

&lt;color=yellow&gt;--Any other letter or symbol--&lt;/color&gt;
Will be printed as is in the output.</value>
  </data>
  <data name="cd_addressWindow_vehicleIdentifierPattern_helpHeader" xml:space="preserve">
    <value>This can pattern will be used to generate the Vehicle Identifier (not the plate) for all vehicles of this building. It defaults to be the internal ID of the vehicle ingame, and can be used as variable in the Write Everywhere text spots.
Each letter in the pattern represents a different kind of information, as shown in the list below:</value>
  </data>
  <data name="cd_Enum__VariableBuildingSubType_PostalCode" xml:space="preserve">
    <value>Code postal où le bâtiment est placé, relatif à la route la plus proche.</value>
  </data>
  <data name="cd_Enum__VariableVehicleSubType_GeneratedId" xml:space="preserve">
    <value>It's the ID generated for each vehicle based on pattern setted up in its owner building. Defaults to be the internal game ID.</value>
  </data>
  <data name="cd_outsideConnections_goToWhenSelect" xml:space="preserve">
    <value>Déplacer la caméra vers l'emplacement lors de la sélection</value>
  </data>
  <data name="cd_outsideConnections_header" xml:space="preserve">
    <value>Any outside connection have a hidden building under the hood. Load the list and click in the desired connection below to check it!</value>
  </data>
  <data name="cd_outsideConnections_reloadOutsideConnections" xml:space="preserve">
    <value>Reload connections list</value>
  </data>
  <data name="cd_outsideConnections_title" xml:space="preserve">
    <value>Outside Connections</value>
  </data>
</root>