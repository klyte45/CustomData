<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" id="root">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace"/>
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0"/>
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string"/>
              <xsd:attribute name="type" type="xsd:string"/>
              <xsd:attribute name="mimetype" type="xsd:string"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string"/>
              <xsd:attribute name="name" type="xsd:string"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1"/>
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3"/>
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required"/>
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="cd_cimNamingTab_title" xml:space="preserve">
    <value>Namen von Cims</value>
  </data>
  <data name="cd_districtTab_cityColor" xml:space="preserve">
    <value>Stadtfarbe</value>
  </data>
  <data name="cd_districtTab_districtColor" xml:space="preserve">
    <value>Distriktfarbe</value>
  </data>
  <data name="cd_districtTab_districtToChange" xml:space="preserve">
    <value>Distrikt auswählen</value>
  </data>
  <data name="cd_districtTab_postalCodeDigits" xml:space="preserve">
    <value>Postleitzahl (000 bis 999)</value>
  </data>
  <data name="cd_districtTab_postalCodeDigitsFallback" xml:space="preserve">
    <value>Postleitzahl</value>
  </data>
  <data name="cd_districtTab_roadFormattingFile" xml:space="preserve">
    <value>Musterdatei für Straßennamen</value>
  </data>
  <data name="cd_districtTab_roadFormattingFileDefault" xml:space="preserve">
    <value>Stadt Standard-Straßenmusterdatei</value>
  </data>
  <data name="cd_districtTab_roadNamingsFile" xml:space="preserve">
    <value>Datei für die Straßennamen</value>
  </data>
  <data name="cd_districtTab_roadNamingsFileDefault" xml:space="preserve">
    <value>Standard-Straßenbenennungs-Datei</value>
  </data>
  <data name="cd_districtTab_title" xml:space="preserve">
    <value>Distriktdaten</value>
  </data>
  <data name="cd_neighborTab_actions" xml:space="preserve">
    <value>Aktionen</value>
  </data>
  <data name="cd_neighborTab_azimuthDirectionShort" xml:space="preserve">
    <value>Azimut (°)</value>
  </data>
  <data name="cd_neighborTab_cityName" xml:space="preserve">
    <value>Ortsname</value>
  </data>
  <data name="cd_neighborTab_neighborNamesFile" xml:space="preserve">
    <value>Standarddatei für Stadtnamen</value>
  </data>
  <data name="cd_neighborTab_title" xml:space="preserve">
    <value>Nachbarschaften</value>
  </data>
  <data name="root_modDescription" xml:space="preserve">
    <value>Datenspeicherung für zusätzliche Dinge für Spielinstanzen</value>
  </data>
  <data name="cd_cimNamingTab_surnamesTitle" xml:space="preserve">
    <value>Nachnamen-Datei</value>
  </data>
  <data name="cd_cimNamingTab_femaleNamesTitle" xml:space="preserve">
    <value>Weibliche Vornamen-Datei</value>
  </data>
  <data name="cd_cimNamingTab_maleNamesTitle" xml:space="preserve">
    <value>Männliche Vornamen-Datei</value>
  </data>
  <data name="cd_cimNamingTab_surnameBeforeMainname" xml:space="preserve">
    <value>Nachnamen vor den Vornamen
(nur bei Verwendung benutzerdefinierter Nachnamen)</value>
  </data>
  <data name="cd_areasNamingTab_simplePatternNote" xml:space="preserve">
    <value>&lt;i&gt;&lt;color=#FFFF00&gt;HINWEIS:&lt;/color&gt; Einfache Musterdateien sind wie die Namensdateien aber benötigten einen Platzhalter "&lt;color=#00ff00&gt;{0}&lt;/color&gt;", um durch den generierten Namen ersetzt zu werden.&lt;/i&gt;</value>
  </data>
  <data name="cd_areasNamingTab_title" xml:space="preserve">
    <value>Benennung von Gebieten</value>
  </data>
  <data name="cd_areasNamingTab_simplePatternFile" xml:space="preserve">
    <value>Einfache Musterdatei</value>
  </data>
  <data name="cd_areasNamingTab_namesFile" xml:space="preserve">
    <value>Namensdatei</value>
  </data>
  <data name="cd_Enum__DistrictAreaType_Parks_CityPark" xml:space="preserve">
    <value>&lt;color=#00FF00&gt;Stadtparkgebiete&lt;/color&gt;</value>
  </data>
  <data name="cd_Enum__DistrictAreaType_Airports" xml:space="preserve">
    <value>&lt;color=#00FFFF&gt;Flughafengebiete&lt;/color&gt;</value>
  </data>
  <data name="cd_Enum__DistrictAreaType_Campus_Liberal" xml:space="preserve">
    <value>&lt;color=#0044FF&gt;Hochschule der Freien Künste&lt;/color&gt;</value>
  </data>
  <data name="cd_Enum__DistrictAreaType_Campus_Regular" xml:space="preserve">
    <value>&lt;color=#0044FF&gt;Universität&lt;/color&gt;</value>
  </data>
  <data name="cd_Enum__DistrictAreaType_Campus_Trade" xml:space="preserve">
    <value>&lt;color=#0044FF&gt;Handelsschule&lt;/color&gt;</value>
  </data>
  <data name="cd_Enum__DistrictAreaType_Industry_Farming" xml:space="preserve">
    <value>&lt;color=#FFFF00&gt;Landwirtschaftsgebiete&lt;/color&gt;</value>
  </data>
  <data name="cd_Enum__DistrictAreaType_Industry_Forest" xml:space="preserve">
    <value>&lt;color=#FFFF00&gt;Forstwirtschaftsgebiete&lt;/color&gt;</value>
  </data>
  <data name="cd_Enum__DistrictAreaType_Industry_Mining" xml:space="preserve">
    <value>&lt;color=#FFFF00&gt;Erzindustriegebiete&lt;/color&gt;</value>
  </data>
  <data name="cd_Enum__DistrictAreaType_Industry_Oil" xml:space="preserve">
    <value>&lt;color=#FFFF00&gt;Ölindustriegebiete&lt;/color&gt;</value>
  </data>
  <data name="cd_Enum__DistrictAreaType_Parks_Amusement" xml:space="preserve">
    <value>&lt;color=#00FF00&gt;Vergnügungsparks&lt;/color&gt;</value>
  </data>
  <data name="cd_Enum__DistrictAreaType_Parks_Natural" xml:space="preserve">
    <value>&lt;color=#00FF00&gt;Naturschutzgebiete&lt;/color&gt;</value>
  </data>
  <data name="cd_Enum__DistrictAreaType_Parks_Zoo" xml:space="preserve">
    <value>&lt;color=#00FF00&gt;Zoos&lt;/color&gt;</value>
  </data>
  <data name="cd_Enum__DistrictAreaType_Pedestrian" xml:space="preserve">
    <value>&lt;color=#888888&gt;Fußgängerzonen&lt;/color&gt;</value>
  </data>
  <data name="cd_Enum__DistrictAreaType_Regular" xml:space="preserve">
    <value>Regelmäßige Distrikte</value>
  </data>
  <data name="cd_addressingSettingsTab_title" xml:space="preserve">
    <value>Adresseinstellungen</value>
  </data>
  <data name="cd_addressingSettingsTab_addressesLines" xml:space="preserve">
    <value>Adresszeilen</value>
  </data>
  <data name="cd_addressingSettingsTab_addressLine1" xml:space="preserve">
    <value>Adresszeile 1</value>
  </data>
  <data name="cd_addressingSettingsTab_addressLine2" xml:space="preserve">
    <value>Adresszeile 2</value>
  </data>
  <data name="cd_addressingSettingsTab_addressLine3" xml:space="preserve">
    <value>Adresszeile 3</value>
  </data>
  <data name="cd_addressingSettingsTab_citywidePostalCode" xml:space="preserve">
    <value>Postleitzahl der Stadt</value>
  </data>
  <data name="cd_addressingSettingsTab_postalCodeFormat" xml:space="preserve">
    <value>Postleitzahl-Format</value>
  </data>
  <data name="cd_addressingSettingsTab_postalCodeSettings" xml:space="preserve">
    <value>Postleitzahleinstellungen</value>
  </data>
  <data name="cd_addressingSettingsTab_postalCodeDescription_A" xml:space="preserve">
    <value>1. Ziffer des Namenschlüssels des Segments (0-6)</value>
  </data>
  <data name="cd_addressingSettingsTab_postalCodeDescription_B" xml:space="preserve">
    <value>2. Ziffer des Namenschlüssels des Segments (0-9)</value>
  </data>
  <data name="cd_addressingSettingsTab_postalCodeDescription_C" xml:space="preserve">
    <value>3. Ziffer des Namenschlüssels des Segments (0-9)</value>
  </data>
  <data name="cd_addressingSettingsTab_postalCodeDescription_D" xml:space="preserve">
    <value>4. Ziffer des Namenschlüssels des Segments (0-9)</value>
  </data>
  <data name="cd_addressingSettingsTab_postalCodeDescription_E" xml:space="preserve">
    <value>5. Ziffer des Namenschlüssels des Segments (0-9)</value>
  </data>
  <data name="cd_addressingSettingsTab_postalCodeDescription_F" xml:space="preserve">
    <value>1. Ziffer der Segment ID des Segments (0-3)</value>
  </data>
  <data name="cd_addressingSettingsTab_postalCodeDescription_G" xml:space="preserve">
    <value>2. Ziffer der Segment ID des Segments (0-9)</value>
  </data>
  <data name="cd_addressingSettingsTab_postalCodeDescription_H" xml:space="preserve">
    <value>3. Ziffer der Segment ID des Segments (0-9)</value>
  </data>
  <data name="cd_addressingSettingsTab_postalCodeDescription_I" xml:space="preserve">
    <value>4. Ziffer der Segment ID des Segments (0-9)</value>
  </data>
  <data name="cd_addressingSettingsTab_postalCodeDescription_J" xml:space="preserve">
    <value>5. Ziffer der Segment ID des Segments (0-9)</value>
  </data>
  <data name="cd_addressingSettingsTab_postalCodeDescription_K" xml:space="preserve">
    <value>Hunderter-Ziffern aus der Stadt-Postleitzahl</value>
  </data>
  <data name="cd_addressingSettingsTab_postalCodeDescription_L" xml:space="preserve">
    <value>Zehner-Ziffern aus der Stadt-Postleitzahl</value>
  </data>
  <data name="cd_addressingSettingsTab_postalCodeDescription_M" xml:space="preserve">
    <value>Start-Ziffern aus der Stadt-Postleitzahl</value>
  </data>
  <data name="cd_addressingSettingsTab_postalCodeDescription_N" xml:space="preserve">
    <value>Hunderter-Ziffern aus der Distrikt-Postleitzahl</value>
  </data>
  <data name="cd_addressingSettingsTab_postalCodeDescription_O" xml:space="preserve">
    <value>Zehner-Ziffern aus der Distrikt-Postleitzahl</value>
  </data>
  <data name="cd_addressingSettingsTab_postalCodeDescription_P" xml:space="preserve">
    <value>Start-Ziffern aus der Distrikt-Postleitzahl</value>
  </data>
  <data name="cd_addressingSettingsTab_postalCodeDescription_X" xml:space="preserve">
    <value>Karten-Koordinate in der Ost-West-Achse (0-8)</value>
  </data>
  <data name="cd_addressingSettingsTab_postalCodeDescription_x_" xml:space="preserve">
    <value>Zehntel-Koordinate in der Ost-West-Achse (0-9)</value>
  </data>
  <data name="cd_addressingSettingsTab_postalCodeDescription_Y" xml:space="preserve">
    <value>Karten-Koordinate in der Nord-Süd-Achse (0-8)</value>
  </data>
  <data name="cd_addressingSettingsTab_postalCodeDescription_y_" xml:space="preserve">
    <value>Zehntel-Koordinate in der Nord-Süd-Achse (0-9)</value>
  </data>
  <data name="cd_addressingSettingsTab_postalCodeHelpHeaderText" xml:space="preserve">
    <value>Es gibt Buchstaben, die einen besonderen Wert in der Postleitzahl-Formatierung haben.
Verwende Backslash &lt;color=#FFFF00&gt;\&lt;/color&gt; um ein Zeichen zu maskieren und es buchstäblich anzuzeigen oder setze den wörtlichen Inhalt &lt;color=#FFFF00&gt;"zwischen doppelte Anführungszeichen"&lt;/color&gt;.
Nicht gelistete Zeichen werden immer wörtlich angezeigt.</value>
  </data>
  <data name="cd_addressingSettingsTab_addressLineDescription_A" xml:space="preserve">
    <value>Straßenname</value>
  </data>
  <data name="cd_addressingSettingsTab_addressLineDescription_B" xml:space="preserve">
    <value>Nummer (Abstand vom Straßenanfang)</value>
  </data>
  <data name="cd_addressingSettingsTab_addressLineDescription_C" xml:space="preserve">
    <value>Ortsname</value>
  </data>
  <data name="cd_addressingSettingsTab_addressLineDescription_D" xml:space="preserve">
    <value>Distrikt</value>
  </data>
  <data name="cd_addressingSettingsTab_addressLineDescription_E" xml:space="preserve">
    <value>Postleitzahl</value>
  </data>
  <data name="cd_addressingSettingsTab_addressLineDescription_F" xml:space="preserve">
    <value>Spezieller Gebietsname (Park, Industrie, etc.)</value>
  </data>
  <data name="cd_addressingSettingsTab_addressLineHelpHeaderText" xml:space="preserve">
    <value>Es gibt Buchstaben, die eine besondere Bedeutung in Adresszeilen darstellen.
Verwende Backslash &lt;color=#FFFF00&gt;\&lt;/color&gt; um ein Zeichen zu maskieren und es buchstäblich anzuzeigen.
Der Text zwischen Klammern &lt;color=#FFFF00&gt;[ ]&lt;/color&gt; wird nicht angezeigt, wenn es keinen Distrikt gibt.
Der zwischen Klammern geschriebene Text &lt;color=#FFFF00&gt;( )&lt;/color&gt; wird nicht angezeigt, wenn kein spezieller Bereich vorhanden ist.</value>
  </data>
  <data name="cd_autoNamingBuildingTab_title" xml:space="preserve">
    <value>Automatische Benennung von Gebäuden</value>
  </data>
  <data name="cd_autoNamingBuildingTab_cargoStationsNamingHeader" xml:space="preserve">
    <value>Frachtzentren</value>
  </data>
  <data name="cd_autoNamingBuildingTab_passengerStationsNamingHeader" xml:space="preserve">
    <value>Personenstationen</value>
  </data>
  <data name="cd_autoNamingBuildingTab_ricoNamingHeader" xml:space="preserve">
    <value>Erste Zeile der Adresse als Name verwenden</value>
  </data>
  <data name="cd_Enum__UseGeneratedNameCategories_CommercialZone" xml:space="preserve">
    <value>Gewerbegebiete</value>
  </data>
  <data name="cd_Enum__UseGeneratedNameCategories_AirplaneCargo" xml:space="preserve">
    <value>Frachtflughäfen</value>
  </data>
  <data name="cd_Enum__UseGeneratedNameCategories_AirplanePassenger" xml:space="preserve">
    <value>Passagierflughäfen</value>
  </data>
  <data name="cd_Enum__UseGeneratedNameCategories_Blimps" xml:space="preserve">
    <value>Zeppelinhaltestellen</value>
  </data>
  <data name="cd_Enum__UseGeneratedNameCategories_Bus" xml:space="preserve">
    <value>Busbahnhöfe</value>
  </data>
  <data name="cd_Enum__UseGeneratedNameCategories_CableCar" xml:space="preserve">
    <value>Seilbahn-Gebäude</value>
  </data>
  <data name="cd_Enum__UseGeneratedNameCategories_Ferry" xml:space="preserve">
    <value>Fährschiffhäfen</value>
  </data>
  <data name="cd_Enum__UseGeneratedNameCategories_Helicopters" xml:space="preserve">
    <value>Hubschrauberlandeplätze</value>
  </data>
  <data name="cd_Enum__UseGeneratedNameCategories_IndustrialZone" xml:space="preserve">
    <value>Industriegebiete</value>
  </data>
  <data name="cd_Enum__UseGeneratedNameCategories_IntercityBus" xml:space="preserve">
    <value>Intercity Busbahnhöfe</value>
  </data>
  <data name="cd_Enum__UseGeneratedNameCategories_Metro" xml:space="preserve">
    <value>U-Bahn-Stationen</value>
  </data>
  <data name="cd_Enum__UseGeneratedNameCategories_Monorail" xml:space="preserve">
    <value>Einschienenbahn-Haltestelle</value>
  </data>
  <data name="cd_Enum__UseGeneratedNameCategories_OfficeZone" xml:space="preserve">
    <value>Bürogebiete</value>
  </data>
  <data name="cd_Enum__UseGeneratedNameCategories_ResidentialZone" xml:space="preserve">
    <value>Wohngebiete</value>
  </data>
  <data name="cd_Enum__UseGeneratedNameCategories_ShipCargo" xml:space="preserve">
    <value>Frachthäfen</value>
  </data>
  <data name="cd_Enum__UseGeneratedNameCategories_ShipPassenger" xml:space="preserve">
    <value>Passagierhäfen</value>
  </data>
  <data name="cd_Enum__UseGeneratedNameCategories_TrainCargo" xml:space="preserve">
    <value>Güterbahnhöfe</value>
  </data>
  <data name="cd_Enum__UseGeneratedNameCategories_TrainPassenger" xml:space="preserve">
    <value>Personenbahnhöfe</value>
  </data>
  <data name="cd_Enum__UseGeneratedNameCategories_Tram" xml:space="preserve">
    <value>Straßenbahnstationen</value>
  </data>
  <data name="cd_Enum__UseGeneratedNameCategories_Trolleybus" xml:space="preserve">
    <value>Trolleybus-Stationen</value>
  </data>
  <data name="cd_Enum__UseGeneratedNameCategories_Taxi" xml:space="preserve">
    <value>Taxistände</value>
  </data>
  <data name="cd_stadiumsTab_selectStadiumLabel" xml:space="preserve">
    <value>Arena/Stadion auswählen</value>
  </data>
  <data name="cd_stadiumsTab_title" xml:space="preserve">
    <value>Arenas &amp; Stadien</value>
  </data>
  <data name="cd_addressWindow_noAddressAvailable" xml:space="preserve">
    <value>Keine Adresse für dieses Gebäude verfügbar</value>
  </data>
  <data name="cd_addressWindow_pickALogoFor" xml:space="preserve">
    <value>Wähle Bildlogo (256x256) für: {0}</value>
  </data>
  <data name="cd_addressWindow_addLogoImage" xml:space="preserve">
    <value>Logobild hinzufügen (256x256)</value>
  </data>
  <data name="cd_addressWindow_invalidTexture" xml:space="preserve">
    <value>Ungültige Textur!</value>
  </data>
  <data name="cd_addressWindow_invalidTextureContent" xml:space="preserve">
    <value>Die Textur muss exakt 256x256 Pixel als Größe haben!</value>
  </data>
  <data name="cd_addressWindow_removeLogo" xml:space="preserve">
    <value>Logo löschen</value>
  </data>
  <data name="cd_Enum__CDVars_CurrentBuilding" xml:space="preserve">
    <value>Zusätzliche Attribute von Custom Data Mod in Verbindung zum aktuellen Gebäude.</value>
  </data>
  <data name="cd_Enum__VariableBuildingSubType_ImageLogo" xml:space="preserve">
    <value>Bildlogo wurde in Custom Data Mod für das Gebäude eingestellt.</value>
  </data>
  <data name="cd_Enum__CDVars_SourceBuilding" xml:space="preserve">
    <value>Zusätzliche Attribute von Custom Data Mod in Verbindung zum Ursprung dieses Fahrzeugs.</value>
  </data>
  <data name="cd_addressWindow_overrideLineColor" xml:space="preserve">
    <value>Linienfarbe überschreiben</value>
  </data>
  <data name="cd_addressWindow_ownVehicleColors" xml:space="preserve">
    <value>Farbe der erzeugten Fahrzeuge</value>
  </data>
  <data name="cd_addressWindow_preferredSkin" xml:space="preserve">
    <value>Bevorzugter Vehicle Skin für Fahrzeuge (nur VS)</value>
  </data>
  <data name="cd_addressWindow_vehicleIdentifierPattern" xml:space="preserve">
    <value>Fahrzeugkennungsmuster</value>
  </data>
  <data name="cd_addressWindow_vehicleIdentifierPattern_helpContent" xml:space="preserve">
    <value>&lt;color=yellow&gt;ABCDE abcde&lt;/color&gt;
Stellt den original Wertr dar (startend mit 0) beim Zählen von Fahrzeugen, die für das übergeordnete Depot gespawnt wurden. Groß-/Kleinschreibung hat das gleiche Verhalten wie die &lt;color=yellow&gt;jkl&lt;/color&gt; Gruppe.
&lt;color=green&gt;Beispiel:&lt;/color&gt; Wenn der Bus der 36. Bus ist, der die Garage verlässt, &lt;color=yellow&gt;A, B&lt;/color&gt; und &lt;color=yellow&gt;C&lt;/color&gt; "0" ist, &lt;color=yellow&gt;a, b&lt;/color&gt; und &lt;color=yellow&gt;c&lt;/color&gt; werden dann ignoriert (keine hundert!), &lt;color=yellow&gt;D&lt;/color&gt; und &lt;color=yellow&gt;d&lt;/color&gt; werden 3 und &lt;color=yellow&gt;E&lt;/color&gt; und &lt;color=yellow&gt;e&lt;/color&gt; werden"5" (erster = 0, zur Erinnerung!). Da es sich um ein Lebensspannenkonto handelt, wird die Zählung nie zurückgesetzt.

&lt;color=yellow&gt;JKL jkl&lt;/color&gt;
Stellt den Wert des N-ten Fahrzeugs in der aktuellen Fahrzeugzusammensetzung dar, beginnend bei 0 (kann so konfiguriert werden, dass es in Zukunft bei 1 beginnt). Nützlich, um beispielsweise Waggons eines Zuges zu identifizieren.
Der Großbuchstabe druckt führende Nullen, wenn die Zahl diese Größenordnung nicht erreicht, der Kleinbuchstabe ignoriert die Ziffern und druckt nichts.
&lt;color=green&gt;Beispiel:&lt;/color&gt; Der 4. Wagen eines Personenzuges gibt nichts zurück &lt;color=yellow&gt;j&lt;/color&gt; noch &lt;color=yellow&gt;k&lt;/color&gt;, "0" für &lt;color=yellow&gt;J&lt;/color&gt; und &lt;color=yellow&gt;K&lt;/color&gt; und "3" für &lt;color=yellow&gt;L&lt;/color&gt; oder &lt;color=yellow&gt;l&lt;/color&gt;.
&lt;color=cyan&gt;ANMERKUNG: &lt;color=yellow&gt;L&lt;/color&gt; und &lt;color=yellow&gt;l&lt;/color&gt; werden immer denselben Wert haben, da die letzte Null immer als signifikante Stelle zählt. Gleiches gilt für die folgenden Multicase-Optionen.&lt;/color&gt;
	
&lt;color=yellow&gt;VWXYZ vwxyz&lt;/color&gt;
Stellt die interne Fahrzeug-ID im Spiel dar. Variiert von 1 bis 16383 (oder 65535 für Benutzer von More Vehicles) und ist vollständig zufällig. Groß-/Kleinschreibung hat das gleiche Verhalten wie &lt;color=yellow&gt;jkl&lt;/color&gt; und &lt;color=yellow&gt;stu&lt;/color&gt; Gruppen.
&lt;color=green&gt;Beispiel:&lt;/color&gt; Die interne ID des Fahrzeugs ist 7562. Also &lt;color=yellow&gt;V&lt;/color&gt; wird "0", &lt;color=yellow&gt;v&lt;/color&gt; ignoriert, &lt;color=yellow&gt;W&lt;/color&gt; und &lt;color=yellow&gt;w&lt;/color&gt; sind "7", &lt;color=yellow&gt;X&lt;/color&gt; und &lt;color=yellow&gt;x&lt;/color&gt; sind "5", &lt;color=yellow&gt;Y&lt;/color&gt; und &lt;color=yellow&gt;y&lt;/color&gt; sind "6" und &lt;color=yellow&gt;Z&lt;/color&gt; und &lt;color=yellow&gt;z&lt;/color&gt; sind "2";
	
&lt;color=yellow&gt;\&lt;/color&gt;
Verwende den umgekehrten Schrägstrich, um den Buchstaben zu maskieren und verwende ihn wörtlich (wenden den Wert nicht an). Verdoppele es, um einen umgekehrten Schrägstrich in der Ausgabe anzuzeigen
&lt;color=green&gt;Beispiel:&lt;/color&gt; Selbst die interne ID des Fahrzeugs ist 7562, wenn &lt;color=yellow&gt;\v&lt;/color&gt; eingegeben wird, &lt;color=yellow&gt;v&lt;/color&gt; wird "v" bei der Ausgabe ausgeben, anstatt ignoriert zu werden.

&lt;color=yellow&gt;--Jeder andere Buchstabe oder Symbol--&lt;/color&gt;
Wird wie in der Ausgabe gedruckt.</value>
  </data>
  <data name="cd_addressWindow_vehicleIdentifierPattern_helpHeader" xml:space="preserve">
    <value>Dieses Muster wird verwendet, um den Fahrzeug-Identifikator (nicht die Plakette) für alle Fahrzeuge dieses Gebäudes zu generieren. Es ist standardmäßig die interne ID des Fahrzeugs und kann als Variable in den Write Everywhere Text-Spots verwendet werden.
Jeder Buchstabe im Muster stellt eine andere Art von Informationen dar, wie in der folgenden Liste angezeigt:</value>
  </data>
  <data name="cd_Enum__VariableBuildingSubType_PostalCode" xml:space="preserve">
    <value>Postleitzahl, wo sich das Gebäude befindet, relativ zur nächstgelegenen Straße.</value>
  </data>
  <data name="cd_Enum__VariableVehicleSubType_GeneratedId" xml:space="preserve">
    <value>Es ist die ID, die für jedes Fahrzeug generiert wird, basierend auf dem Muster, das für das Gebäude des Eigentümers erstellt wurden. Standard ist die interne Spiel-ID.</value>
  </data>
  <data name="cd_outsideConnections_goToWhenSelect" xml:space="preserve">
    <value>Kamera zum Ort bewegen, wenn ausgewählt wird</value>
  </data>
  <data name="cd_outsideConnections_header" xml:space="preserve">
    <value>Jede externe Verbindung beinhaltet ein verborgenes Gebäude. Lade die Liste und klicke in der gewünschten Verbindung unten, um es zu überprüfen!</value>
  </data>
  <data name="cd_outsideConnections_reloadOutsideConnections" xml:space="preserve">
    <value>Verbindungsliste neu laden</value>
  </data>
  <data name="cd_outsideConnections_title" xml:space="preserve">
    <value>Externe Verbindungen</value>
  </data>
</root>